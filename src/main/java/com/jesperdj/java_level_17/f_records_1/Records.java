package com.jesperdj.java_level_17.f_records_1;

/**
 * <a href="https://openjdk.java.net/jeps/395">JEP 395</a>: Records.
 * <p>
 * A way to concisely implement immutable data objects, standard since JDK 16.
 */
public class Records {

    public static void main(String[] args) {
        // Creating an instance of a record works in exactly the same way as creating an instance of a regular class, using 'new'.
        var address = new AddressRec("Null Street", "1", "Soul buoy", "Null Island");

        // equals(), hashCode() and toString() methods are automatically generated by the compiler.
        System.out.println(address);

        // For each field of the record, an accessor method is generated with the same name. Note that this is different from the JavaBeans convention where
        // getter methods are named getSomething(). In this example: country() (and not getCountry()).
        System.out.println(address.country());
    }
}
